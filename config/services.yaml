# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    protocol: http

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    OwllabApp\:
        resource: '../src/OwllabApp/*'
        exclude: '../src/OwllabApp/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    OwllabApp\Controller\:
        resource: '../src/OwllabApp/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    OwllabApp\Serializer\UserContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@OwllabApp\Serializer\UserContextBuilder.inner']

    OwllabApp\Serializer\UserAttributeNormalizer:
        arguments: ['@security.token_storage']
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    OwllabApp\Security\UserConfirmationService:
        arguments:
            $logger: "@monolog.logger.token_confirmation"

    OwllabApp\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 1 }
        arguments: ['@api_platform.action.exception', '@logger', false]

    OwllabApp\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
